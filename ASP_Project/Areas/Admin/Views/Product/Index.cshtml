@using ASP_Project.Areas.Identity.Data.Models; 
@model ProductListViewModel;
@{
    ViewData["Title"] = "Products";

    Pager pager = new Pager();

    int pageNo = 0;

    @if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/productIndex.css">
    <script defer src="https://kit.fontawesome.com/28a2634532.js" crossorigin="anonymous"></script>
    <script defer src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
</head>
<body> 
        <div class="div-up"> 
            <div class="col-6">
                <h2 class="text-primary">Products list</h2>
            </div>
            <a asp-controller="Product" asp-action="Create" class="btn btn-cart"><i class="fas fa-plus"></i> Create New Product </a>
        </div>
    <br/>
    <main>
        <div class="main-container">
            <div class="filters">
                    <form class="form-filters" method="get" action="@Url.Action("Index")">
                        <button type="button" class="accordion">Price</button>
                        <div class="panel">
                            <div class="filter-input">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Min/Max</span>
                                    </div>
                                    <input name="filter.MinPrice" type="text" class="form-control" placeholder="0$" value="@Model.Filter.MinPrice">
                                    <input name="filter.MaxPrice" type="text" class="form-control" placeholder="5000$" value="@Model.Filter.MaxPrice">
                                </div>
                            </div>
                        </div>
                        <hr />

                        <button type="button" class="accordion">RAM</button>
                        <div class="panel">
                            <div class="filter-input">
                                <div class="input-group-items">
                                    @foreach (var ram in new List<string> { "4 GB", "6 GB", "8 GB", "16 GB", "1 TB" })
                                    {
                                        <div class="custom-control custom-checkbox mr-sm-2">
                                            <input name="filter.RAMs" type="checkbox" class="custom-control-input" id="ram@(ram)" value="@ram" @(Model.Filter.RAMs != null && Model.Filter.RAMs.Contains(ram) ? "checked" : "")>
                                            <label class="custom-control-label" for="ram@(ram)">@ram RAM</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <hr />

                        <button type="button" class="accordion">Operating System</button>
                        <div class="panel">
                            <div class="filter-input">
                                <div class="input-group-items">
                                    @foreach (var os in Enum.GetValues(typeof(OperatingSystemEnum)).Cast<OperatingSystemEnum>())
                                    {
                                        <div class="custom-control custom-checkbox mr-sm-2">
                                            <input name="filter.OperatingSystems" type="checkbox" class="custom-control-input" id="os@(os)" value="@os" @(Model.Filter.OperatingSystems != null && Model.Filter.OperatingSystems.Contains(os) ? "checked" : "")>
                                            <label class="custom-control-label" for="os@(os)">@os</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <hr />

                        <button type="button" class="accordion">Producer</button>
                        <div class="panel">
                            <div class="filter-input">
                                <div class="input-group-items">
                                    @foreach (var pr in Enum.GetValues(typeof(Producer)).Cast<Producer>())
                                    {
                                        <div class="custom-control custom-checkbox mr-sm-2">
                                            <input name="filter.Producers" type="checkbox" class="custom-control-input" id="os@(pr)" value="@pr" @(Model.Filter.Producers != null && Model.Filter.Producers.Contains(pr) ? "checked" : "")>
                                            <label class="custom-control-label" for="os@(pr)">@pr</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <hr />

                        <button type="button" class="accordion">NFC</button>
                        <div class="panel">
                            <div class="filter-input">
                                <div class="custom-control custom-radio">
                                    <input type="radio" id="nfcAll" name="filter.NFC" value="" @(Model.Filter.NFC == null ? "checked" : "")>
                                    <label for="nfcAll">All</label>
                                </div>
                                <div class="custom-control custom-radio">
                                    <input type="radio" id="nfcYes" name="filter.NFC" value="true" @(Model.Filter.NFC == true ? "checked" : "")>
                                    <label for="nfcYes">Yes</label>
                                </div>
                                <div class="custom-control custom-radio">
                                    <input type="radio" id="nfcNo" name="filter.NFC" value="false" @(Model.Filter.NFC == false ? "checked" : "")>
                                    <label for="nfcNo">No</label>
                                </div>
                            </div>
                        </div>
                        <hr />

                        <button type="button" class="accordion">Number of SIM Cards</button>
                        <div class="panel">
                            <div class="filter-input">
                                <div class="input-group" style="padding-right:40%;">
                                    <input name="filter.NumberOfSIMCards" type="text" class="form-control" placeholder="Cards count" value="@Model.Filter.NumberOfSIMCards">
                                </div>
                            </div>
                        </div>
                        <hr />

                        <div class="search-div">
                            <input type="text" id="searchText" name="filter.SearchText" placeholder="Search by name" class="form-control" value="@Model.Filter.SearchText">
                            <button type="submit" class="btn btn-primary">Search</button>
                        </div>
                    </form>
                </div>
            <div class="fourColumns">
                @if (!Model.Products.Any() && !string.IsNullOrEmpty(Model.Filter.SearchText))
                    {
                        <label>No products found. </label>
                    }
                else
                {
                    @foreach (var item in @Model.Products!)
                    {
                        <div class="product">
                            <div class="product-content">
                                <div class="product-img">
                                    @if (item.ProductImages != null && item.ProductImages.Any())
                                    {
                                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.ProductImages.First().ImageData!)" alt="product image">
                                    }
                                    else
                                    {
                                        <img alt="No image" />
                                    }
                                </div>
                                <div class="product-btns">
                                    <a asp-controller="Product" asp-action="Delete" asp-route-id="@item.Id"
                                       class="btn btn-delete"><i class="fas fa-trash"></i> Delete</a>
                                    <a asp-controller="Product" asp-action="Edit" asp-route-id="@item.Id"
                                       class="btn btn-edit"> <i class="fas fa-edit"></i> Edit</a>
                                </div>
                            </div>

                            <div class="product-info">
                                <a href="#" class="product-name">
                                    @item.Name
                                </a>
                                <div class="product-info-top">
                                    <h2 class="md-title">
                                        @item.Producer
                                        @item.OperatingSystemEnum,
                                        @item.BatteryCapacity,
                                        @item.Color,
                                        @item.RAM,
                                        @item.InternalMemory
                                    </h2>

                                </div>
                                @if (item.Discount != null && item.Discount > 0)
                                {
                                    var discountPercentage = (decimal)item.Discount / 100;
                                    var discountedPrice = item.Price - (item.Price * discountPercentage);
                                    <p class="product-price-discount">$ @item.Price.ToString("0.00")</p>
                                    <p class="product-price">$ @discountedPrice.ToString("0.00")</p>
                                }
                                else
                                {
                                    <p class="product-price">$ @item.Price.ToString("0.00")</p>
                                }
                            </div>

                            @if (item.Discount != null && item.Discount > 0)
                            {
                                <div class="off-info">
                                    <h2 class="sm-title">@item.Discount% off</h2>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
        <div class="container-paggination">
                @if (pager.TotalPages > 0)
                {
                    <ul class="pagination justify-content-end">
                        @if (pager.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pg="1"
                                   asp-route-minPrice="@Model.Filter.MinPrice"
                                   asp-route-maxPrice="@Model.Filter.MaxPrice"
                                   asp-route-RAMs="@Model.Filter.RAMs"
                                   asp-route-searchText="@Model.Filter.SearchText"
                                   asp-route-OperatingSystemEnum="@Model.Filter.OperatingSystems"
                                   asp-route-Producer="@Model.Filter.Producers"
                                   asp-route-NFC="@Model.Filter.NFC"
                                   asp-route-NFC="@Model.Filter.NumberOfSIMCards">First</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pg="@(pager.CurrentPage - 1)"
                                   asp-route-minPrice="@Model.Filter.MinPrice"
                                   asp-route-maxPrice="@Model.Filter.MaxPrice"
                                   asp-route-RAMs="@Model.Filter.RAMs"
                                   asp-route-searchText="@Model.Filter.SearchText"
                                   asp-route-OperatingSystemEnum="@Model.Filter.OperatingSystems"
                                   asp-route-Producer="@Model.Filter.Producers"
                                   asp-route-NFC="@Model.Filter.NFC"
                                   asp-route-NFC="@Model.Filter.NumberOfSIMCards">Previus</a>
                            </li>
                        }

                        @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                        {
                            <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pg="@pge"
                                   asp-route-minPrice="@Model.Filter.MinPrice"
                                   asp-route-maxPrice="@Model.Filter.MaxPrice"
                                   asp-route-RAMs="@Model.Filter.RAMs"
                                   asp-route-searchText="@Model.Filter.SearchText"
                                   asp-route-OperatingSystemEnum="@Model.Filter.OperatingSystems"
                                   asp-route-Producer="@Model.Filter.Producers"
                                   asp-route-NFC="@Model.Filter.NFC"
                                   asp-route-NFC="@Model.Filter.NumberOfSIMCards">@pge</a>
                            </li>
                        }

                        @if (pager.CurrentPage < pager.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pg="@(pager.CurrentPage + 1)"
                                   asp-route-minPrice="@Model.Filter.MinPrice"
                                   asp-route-maxPrice="@Model.Filter.MaxPrice"
                                   asp-route-RAMs="@Model.Filter.RAMs"
                                   asp-route-searchText="@Model.Filter.SearchText"
                                   asp-route-OperatingSystemEnum="@Model.Filter.OperatingSystems"
                                   asp-route-Producer="@Model.Filter.Producers"
                                   asp-route-NFC="@Model.Filter.NFC"
                                   asp-route-NFC="@Model.Filter.NumberOfSIMCards">Next</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pg="@(pager.TotalPages)"
                                   asp-route-minPrice="@Model.Filter.MinPrice"
                                   asp-route-maxPrice="@Model.Filter.MaxPrice"
                                   asp-route-RAMs="@Model.Filter.RAMs"
                                   asp-route-searchText="@Model.Filter.SearchText"
                                   asp-route-OperatingSystemEnum="@Model.Filter.OperatingSystems"
                                   asp-route-Producer="@Model.Filter.Producers"
                                   asp-route-NFC="@Model.Filter.NFC"
                                   asp-route-NFC="@Model.Filter.NumberOfSIMCards">Last</a>
                            </li>
                        }
                    </ul>
                }
            </div>
    </main>
    <script src="~/js/Home.js"></script>
</body> 